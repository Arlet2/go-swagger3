components:
  parameters:
    Client-Language:
      in: header
      name: Client-Language
      schema:
        $ref: '#/components/schemas/LanguageEnum'
    Client-Platform:
      description: 'Available values : android, ios, web'
      example: android
      in: header
      name: Client-Platform
      schema:
        description: 'Available values : android, ios, web'
        example: android
        type: string
    Client-Version:
      description: Client Version
      in: header
      name: Client-Version
      schema:
        description: Client Version
        type: string
  schemas:
    CreateUserRequest:
      properties:
        age:
          type: integer
        email_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
        roles:
          items:
            type: string
          type: array
        user_name:
          type: string
      type: object
    CreateUserResponse:
      properties:
        user_id:
          type: string
      type: object
    Filter:
      properties:
        distance:
          type: integer
        district_code:
          type: string
        rating:
          type: integer
        type:
          type: string
      type: object
    GetRestaurantsResponse:
      properties:
        restaurants:
          items:
            properties:
              city:
                type: string
              menus:
                items:
                  properties:
                    name:
                      type: string
                  type: object
                type: array
              name:
                type: string
              rating:
                type: string
              type:
                type: string
            type: object
          type: array
      type: object
    Headers:
      properties:
        Client-Language:
          $ref: '#/components/schemas/LanguageEnum'
        Client-Platform:
          description: 'Available values : android, ios, web'
          example: android
          type: string
        Client-Version:
          description: Client Version
          type: string
      type: object
    LanguageEnum:
      enum:
      - en-in
      - en-id
      - id
      - en-mx
      - es-mx
      - en-cl
      - es-cl
      - en-ng
      - en-pk
      - en-tr
      - tr
      example: en-in
      type: string
    Menu:
      properties:
        name:
          type: string
      type: object
    OrderByEnum:
      enum:
      - nearest
      - popular
      - new
      - highest-rated
      example: popular
      type: string
    Restaurant:
      properties:
        city:
          type: string
        menus:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        name:
          type: string
        rating:
          type: string
        type:
          type: string
      type: object
  securitySchemes:
    AuthorizationHeader:
      description: Input your token
      scheme: bearer
      type: http
info:
  contact:
    email: parvez.hassan@olx.com
    name: Restaurants API Support
  description: Restaurants API documentation
  license:
    name: MIT
    url: https://en.wikipedia.org/wiki/MIT_License
  title: User API
  version: "1.0"
openapi: 3.0.0
paths:
  /restaurants:
    get:
      description: ' Returns a list of restaurants based on filter request'
      parameters:
      - $ref: '#/components/parameters/Client-Version'
      - $ref: '#/components/parameters/Client-Language'
      - $ref: '#/components/parameters/Client-Platform'
      - description: count of restaurants
        in: query
        name: count
        schema:
          description: count of restaurants
          format: int64
          type: integer
      - description: offset limit count
        in: query
        name: offset
        schema:
          description: offset limit count
          format: int64
          type: integer
      - description: order restaurants list
        in: query
        name: order_by
        schema:
          $ref: '#/components/schemas/OrderByEnum'
      - description: In json format
        in: query
        name: filter
        schema:
          $ref: '#/components/schemas/Filter'
          type: Filter
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRestaurantsResponse'
          description: ""
      summary: Get restaurants list
  /user:
    post:
      description: ' Creates & Returns an User based on the request'
      parameters:
      - $ref: '#/components/parameters/Client-Version'
      - $ref: '#/components/parameters/Client-Language'
      - $ref: '#/components/parameters/Client-Platform'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: ""
      summary: Create User
security:
- AuthorizationHeader:
  - read
  - write
servers:
- description: ' Server 1'
  url: localhost:8080
- description: ' Server 2'
  url: localhost:8081
